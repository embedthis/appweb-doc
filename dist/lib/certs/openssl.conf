HOME                    = .
dir                     = .                     # Where everything is kept

[ ca ]
default_ca              = defaultCA

[ defaultCA ]
new_certs_dir           = $dir             # Default place for new certs
certificate             = $dir/ca.crt      # The CA certificate
database                = $dir/ca.db       # Database index file
serial                  = $dir/ca.srl      # The current serial number
private_key             = $dir/ca.key      # The private key
default_crl_days        = 7                # How long before next CRL
default_days            = 3650             # How long to certify for
default_md              = default          # Which md to use
policy                  = policyMatch
x509_extensions         = client
copy_extensions         = copy
name_opt                = ca_default
cert_opt                = ca_default


[ policyMatch ]
countryName             = supplied
stateOrProvinceName     = supplied
organizationName        = supplied
organizationalUnitName  = supplied
commonName              = supplied
emailAddress            = supplied


# Keygen, requests and self-signed certs

[ req ]
default_bits            = 2048
distinguished_name      = req_distinguished_name
default_keyfile         = $dir/ca.key
prompt                  = no
x509_extensions         = selfExtensions        # Extensions to add to self-signed cert
req_extensions          = reqExtensions         # Extensions for certificate request
# attributes            = req_attributes


[ req_distinguished_name ]
countryName             = US
stateOrProvinceName     = Washington
localityName            = Seattle
0.organizationName      = Example.com
organizationalUnitName  = Licensing
commonName              = example.com
emailAddress            = licensing@example.com

[ req_attributes ]
challengePassword       = A challenge password
challengePassword_min   = 4
challengePassword_max   = 20

[ caExtensions ]
basicConstraints        = CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always, issuer:always
keyUsage                = cRLSign, keyCertSign, digitalSignature, keyEncipherment

[ selfExtensions ]
basicConstraints        = CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always, issuer:always

[ client ]
basicConstraints        = CA:FALSE
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid, issuer:always
keyUsage                = digitalSignature, keyEncipherment
extendedKeyUsage        = clientAuth

[ server ]
basicConstraints        = CA:FALSE
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid
keyUsage                = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage        = clientAuth, serverAuth
nsComment               = "device"
#nsCertType

[ reqExtensions ]
basicConstraints        = CA:TRUE
subjectKeyIdentifier    = hash
#keyUsage                = nonRepudiation, digitalSignature, keyEncipherment, dataEncipherment, keyAgreement, keyCertSign
#extendedKeyUsage        = serverAuth
